#!/usr/bin/env python

# Copyright 2021 RUVU Robotics B.V.

import rospy
from sick_safetyscanners.msg import ExtendedLaserScanMsg
from sensor_msgs.msg import LaserScan


class Node:
    def __init__(self):
        self.sub = rospy.Subscriber("extended_laser_scan", ExtendedLaserScanMsg, self._scan_callback)
        self.pub = rospy.Publisher("extended_laser_scan_reflectors", LaserScan)

    def _scan_callback(self, msg):
        output = LaserScan()
        output.header.stamp = msg.laser_scan.header.stamp
        output.header.frame_id = msg.laser_scan.header.frame_id
        output.header.seq = msg.laser_scan.header.seq
        output.angle_min = msg.laser_scan.angle_min
        output.angle_max = msg.laser_scan.angle_max
        output.angle_increment = msg.laser_scan.angle_increment
        output.time_increment = msg.laser_scan.time_increment
        output.scan_time = msg.laser_scan.scan_time
        output.range_min = msg.laser_scan.range_min
        output.range_max = msg.laser_scan.range_max
        output.intensities = msg.laser_scan.intensities

        for range, reflector in zip(msg.laser_scan.ranges, msg.reflektor_status):
            if reflector:
                output.ranges.append(range)
            else:
                output.ranges.append(-1)

        self.pub.publish(output)


if __name__ == "__main__":
    rospy.init_node('intensity_vs_distance_plotter')

    plotter = Node()
    rospy.spin()
